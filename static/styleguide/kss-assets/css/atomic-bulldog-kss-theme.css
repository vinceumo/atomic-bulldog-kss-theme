/*Atomic Bulldog version 1.0.0*/
/*Min and Max mixins*/
@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,700");
/*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */
/* Document
   ========================================================================== */
/**
 * Use a better box model (opinionated).
 */
html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/**
 * Use a more readable tab size (opinionated).
 */
:root {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
 * Correct the line height in all browsers.
 */
html {
  line-height: 1.15;
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
 */
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct height in Firefox.
 */
hr {
  height: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Add the correct text decoration in Chrome, Edge, and Safari.
 */
abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp,
pre {
  font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Remove the inheritance of text transform in Edge and Firefox.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  padding: 0;
}

/**
 * Add the correct vertical alignment in Chrome and Firefox.
 */
progress {
  vertical-align: baseline;
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Chrome and Safari.
 */
summary {
  display: list-item;
}

.kss-h1 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 2.8125rem;
  margin-bottom: 0.25rem;
}

.kss-h1,
.kss-h2 {
  margin-top: 9rem;
}

.kss-h3,
.kss-h4 {
  margin-top: 3rem;
}

.kss-h5,
.kss-h6 {
  margin-top: 1.25rem;
}

.kss-h1 .kss-section__ref {
  color: #87CCE5;
}

.kss-h2 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 2rem;
  margin-bottom: 0.25rem;
}

.kss-h1,
.kss-h2 {
  margin-top: 9rem;
}

.kss-h3,
.kss-h4 {
  margin-top: 3rem;
}

.kss-h5,
.kss-h6 {
  margin-top: 1.25rem;
}

.kss-h1 .kss-section__ref {
  color: #87CCE5;
}

.kss-h3 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.5rem;
  margin-bottom: 0.25rem;
}

.kss-h1,
.kss-h2 {
  margin-top: 9rem;
}

.kss-h3,
.kss-h4 {
  margin-top: 3rem;
}

.kss-h5,
.kss-h6 {
  margin-top: 1.25rem;
}

.kss-h1 .kss-section__ref {
  color: #87CCE5;
}

.kss-h4 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.25rem;
  margin-bottom: 0.25rem;
}

.kss-h1,
.kss-h2 {
  margin-top: 9rem;
}

.kss-h3,
.kss-h4 {
  margin-top: 3rem;
}

.kss-h5,
.kss-h6 {
  margin-top: 1.25rem;
}

.kss-h1 .kss-section__ref {
  color: #87CCE5;
}

.kss-h5 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.15rem;
  margin-bottom: 0.25rem;
}

.kss-h1,
.kss-h2 {
  margin-top: 9rem;
}

.kss-h3,
.kss-h4 {
  margin-top: 3rem;
}

.kss-h5,
.kss-h6 {
  margin-top: 1.25rem;
}

.kss-h1 .kss-section__ref {
  color: #87CCE5;
}

.kss-h6 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
  margin-bottom: 0.25rem;
}

.kss-h1,
.kss-h2 {
  margin-top: 9rem;
}

.kss-h3,
.kss-h4 {
  margin-top: 3rem;
}

.kss-h5,
.kss-h6 {
  margin-top: 1.25rem;
}

.kss-h1 .kss-section__ref {
  color: #87CCE5;
}

.kss-container {
  padding-right: 1rem;
  padding-left: 1rem;
}

.kss-container:not(.is-fluid) {
  margin: 0 auto;
}

@media only screen and (min-width: 37.5em) {
  .kss-container:not(.is-fluid) {
    width: 340px;
  }
}

@media only screen and (min-width: 56.25em) {
  .kss-container:not(.is-fluid) {
    width: 630px;
  }
}

@media only screen and (min-width: 75em) {
  .kss-container:not(.is-fluid) {
    width: 920px;
  }
}

@media only screen and (min-width: 112.5em) {
  .kss-container:not(.is-fluid) {
    width: 1170px;
  }
}

.kss-navigation ul.kss-nav {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.kss-navigation ul.kss-nav ul.kss-subnav {
  list-style-type: none;
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

.kss-navigation ul.kss-nav ul.kss-subnav .kss-nav-link {
  padding: 0.25rem;
}

.kss-navigation ul.kss-nav ul.kss-subnav li.is-grandchild {
  padding-left: 0.5rem;
}

.kss-navigation .kss-nav-link {
  color: #495057;
  text-decoration: none;
  padding: 0.5rem;
  border-radius: 5px;
  display: block;
  width: 100%;
}

.kss-navigation .kss-nav-link:hover, .kss-navigation .kss-nav-link:focus {
  background-color: #e9ecef;
  outline-color: transparent;
  border-color: transparent;
  box-shadow: 0 0 0 transparent;
}

.kss-navigation .kss-nav-link.is-active {
  background-color: #dbf0f7;
}

.kss-navigation .kss-nav-link.is-active:hover, .kss-navigation .kss-nav-link.is-active:focus {
  background-color: #dbf0f7;
}

.kss-navigation .kss-nav-link .kss-nav__ref {
  font-size: calc(1rem - 0.15rem);
}

.kss-section__permalink:hover, .kss-section__permalink:focus {
  color: #87CCE5;
  text-decoration: underline;
}

.kss-section__source {
  color: #6c757d;
  font-size: calc(1rem - 0.1rem);
}

.kss-section__description p {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
}

.kss-section__description a {
  color: #87CCE5;
}

.kss-section__description a:hover, .kss-section__description a:focus {
  color: #87CCE5;
  text-decoration: underline;
}

.kss-section__description code {
  background-color: #dee2e6;
  border-radius: 5px;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.kss-section__description blockquote {
  background-color: #f8f9fa;
  padding: 1rem;
  border-left: 0.5rem solid #dee2e6;
  margin-bottom: 1rem;
}

.kss-section__example-container {
  border-radius: 5px;
  border: 3px solid #dee2e6;
}

.kss-section__example-container pre[class*="language-"] {
  margin: 0;
}

.kss-section__example-container code[class*="language-"],
.kss-section__example-container pre[class*="language-"] {
  background-color: #dee2e6;
}

.kss-section__example-container .kss-section__examples {
  padding: 1rem;
  overflow-x: auto;
}

.kss-section__example-container .kss-section__examples .kss-modifiers__heading {
  font-size: 1.5rem;
}

.kss-section__example-container .kss-section__examples code.kss-modifiers__name {
  background-color: #dee2e6;
  border-radius: 5px;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  margin-top: 1.5rem;
}

.kss-section__example-container .kss-section__examples .kss-modifiers__example {
  margin-top: 1rem;
  margin-bottom: 3rem;
}

.kss-section__example-container .kss-section__examples .kss-modifiers__example:last-child {
  margin-bottom: 0;
}

.kss-section__example-container .kss-section__examples .box {
  background: #87CCE5;
  color: #ffffff;
  padding: 1rem;
  width: 100%;
  height: 100%;
}

.kss-sidebar {
  height: 100vh;
  padding: 1rem;
  background-color: #f8f9fa;
  overflow-y: auto;
  position: -webkit-sticky;
  position: sticky;
  top: 0;
}

.kss-page-container {
  display: grid;
  grid-template-columns: 320px 1fr;
  grid-template-areas: "sidebar main" "sidebar footer";
  grid-gap: 1.25rem;
}

.kss-page-container .kss-sidebar {
  grid-area: sidebar;
}

.kss-page-container .kss-main {
  grid-area: main;
}

.kss-page-container .kss-footer {
  grid-area: footer;
  align-self: end;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
